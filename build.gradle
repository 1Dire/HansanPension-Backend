plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hansanpension'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 웹 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JWT 관련 의존성만 남김
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// 데이터베이스 관련 (JPA + PostgreSQL)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'

	// Jakarta Persistence 의존성
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	// Swagger UI와 API 문서화
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// Jackson (JSON 데이터 처리)
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// Lombok (개발 편의성)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Security (JWT 인증 처리)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// CORS 설정 및 기타 웹 관련 설정
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// 개발용 도구
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트 관련 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 검증을 위한 의존성 추가 (선택 사항)
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// WebClient 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.67.Final'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
